{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ChromaX","text":"<p>ChromaX is an experimental utilities package for Chroma vector database.</p>"},{"location":"embeddings/","title":"Embeddings","text":""},{"location":"embeddings/#onnx-runtime","title":"Onnx Runtime","text":"<p>A convenient way to run onnx models to generate embeddings.</p> <p>Download a model:</p> <pre><code>mkdir -p ~/.cache/models/hf\ngit clone git clone https://huggingface.co/snowflake/arctic-embed-s ~/.cache/models/hf/snowflake-arctic-embed-s\n</code></pre> <p>Alternatively use HF CLI:</p> <pre><code>pip install -U \"huggingface_hub[cli]\"\nhuggingface-cli download snowflake/arctic-embed-s --local-dir snowflake-arctic-embed-s\n</code></pre> <pre><code>from chromadbx.embeddings.onnx import OnnxRuntimeEmbeddings\nimport chromadb\n\n# adjust the model path to the path where you downloaded the model\n# We use the CPUExecutionProvider, adjust it to your liking or leave empty to let onnx choose the most appropriate provider\nef = OnnxRuntimeEmbeddings(model_path=f\"snowflake-arctic-embed-s\", preferred_providers=[\"CPUExecutionProvider\"])\n\nclient = chromadb.Client()\n\ncol = client.get_or_create_collection(\"test\", embedding_function=ef)\n\ncol.add(ids=[\"id1\", \"id2\", \"id3\"], documents=[\"lorem ipsum...\", \"doc2\", \"doc3\"])\n</code></pre>"},{"location":"embeddings/#llamacpp","title":"Llama.cpp","text":"<p>\u26a0\ufe0f Llama.cpp embedding function is still in early development. Please report any problems you may have by raising an issue.</p> <p>A convenient way to run llama.cpp models to generate embeddings.</p> <p>Download a model:</p> <pre><code>pip install -U \"huggingface_hub[cli]\"\nhuggingface-cli download ChristianAzinn/snowflake-arctic-embed-s-gguf --include=snowflake-arctic-embed-s-f16.GGUF --local-dir snowflake-arctic-embed-s\n</code></pre> <pre><code>from chromadbx.embeddings.llamacpp import LlamaCppEmbeddingFunction\nimport chromadb\n\nef = LlamaCppEmbeddingFunction(model_path=\"snowflake-arctic-embed-s/snowflake-arctic-embed-s-f16.GGUF\")\n\nclient = chromadb.Client()\n\ncol = client.get_or_create_collection(\"test\", embedding_function=ef)\n\ncol.add(ids=[\"id1\", \"id2\", \"id3\"], documents=[\"lorem ipsum...\", \"doc2\", \"doc3\"])\n</code></pre>"}]}